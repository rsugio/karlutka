<?xml version="1.0" encoding="UTF-8"?>
<p1:xiObj xmlns:p1="urn:sap-com:xi"><p1:idInfo VID="630032b3517e11e19e6a00001de63cf6"><p1:vc vcType="S" swcGuid="0050568f0aac1ed8878a92199a65f7cb" sp="-1" caption="B2B MAPPING KIT 2.0"><p1:clCxt consider="A" /></p1:vc><p1:key typeID="FUNC_LIB" oid="2993aca97d393a28bcf014f235595a38"><p1:elem>UDFNodePool</p1:elem><p1:elem>http://sap.com/xi/B2B/Examples/EDIFACT</p1:elem></p1:key></p1:idInfo><p1:generic><p1:admInf><p1:modifBy>sap</p1:modifBy><p1:modifAt>2012-02-07 10:26:34.277</p1:modifAt><modifAtLong>1328606794277</modifAtLong><p1:owner>sap</p1:owner></p1:admInf><p1:lnks><p1:lnkRole role="_inner" kpos="0"><p1:lnk rMode="R"><p1:key typeID="FUNC_LIB_PROG" oid="a7faf50147d43de0a798f5d02a1253f9"><p1:elem>UDFNodePool</p1:elem><p1:elem>http://sap.com/xi/B2B/Examples/EDIFACT</p1:elem><p1:elem>class</p1:elem><p1:elem>sap/com/UDFNodePool</p1:elem></p1:key></p1:lnk></p1:lnkRole></p1:lnks><p1:textInfo loadedL="EN"><p1:textObj id="630032b3517e11e19e6a00001de63cf6" type="0" masterL="EN"><p1:texts lang="EN"><p1:text label="8f04dfc2fbd9ea7fa4d1dc1e231d1903">Copies the whole context of 1st queue as often as the corresponding value of the 2nd queue indicates</p1:text><p1:text label="2123244cfe17cf5bd6a02e1709f20413">UDFNodePool</p1:text><p1:text label="d43b477b7dc6c0fb3ec5e0e364f2cbc7">UDFNodePool</p1:text><p1:text label="b229e44786413757026a207acb45da6a">Puts all arguments sequentially into one queue</p1:text><p1:text label="743864e637bcf56fd341969563f18285">splitValueStringToContextValues</p1:text><p1:text label="2efe27e9cac86c8f94accf85b1e226c4">UDFNodePool</p1:text><p1:text label="088dc85b618dfc4f4c67e8e0c2fd7da1">concatContextValues</p1:text><p1:text label="65dccfd9f281dad3e1806fe015c51696">format contexts in inputQueue by values (representing contexts) in exampleQueue</p1:text><p1:text label="689605282b4d6c39151eec254d2cab44">createMultipleContextCopies</p1:text><p1:text label="df69f3b4efc4502caaad4a0fd02e1d8c">createIfHasValue</p1:text><p1:text label="31277d888a2425b5b818591b344f2da7">Splits context in 1st argument into blocks defined in size by 3rd argument and returns value at index given by 2nd argument. Returns SUPPRESS when context is empty.</p1:text><p1:text label="58a3ce7fc46d369a1275548a2aaa92ff">UDFNodePool</p1:text><p1:text label="503f0ddfd8353f49e4a483c9e8085178">fragmentSingleValue</p1:text><p1:text label="08fbe7d8fe716f18e1c9ab7b73957746">createContextsForFixedBlockSize001</p1:text><p1:text label="bd985c3248484f960c1fa0761aa3f9b2">simpleUseOneAsManyAndSplitByEachValue</p1:text><p1:text label="fbfb952e5905f151f74d65659d2c7069">UDFNodePool</p1:text><p1:text label="b30fca9f25237bbb7b69a2fa3851db2f">UDFNodePool</p1:text><p1:text label="9459f0e41d58c5ba469a2cbb4b481807">createIfHasOneOfSuchValues</p1:text><p1:text label="0c6d1fb2c30526c175cc6fa5917e6aa9">Rearranges the third argument by the corresponding key set in the second argument formatted by the first argument</p1:text><p1:text label="75dac575aff667065b75491f37bb6efa">createIfExistsAndHasValue</p1:text><p1:text label="85487e28ae1a4d7f1a61e55d1cbd54de">UDFNodePool</p1:text><p1:text label="c61b1eafbcdd9e978e7af6a11545fbdc">passIfHasValue</p1:text><p1:text label="4370c272b37a786f1956a5607c7b7085">deleteMultipleContextValues</p1:text><p1:text label="1986c30d8b3015ca42c66511ce6e1279">DO NOT USE ANYMORE!!! Splits context in first argument into blocks defined in size by parameter and returns value at index given by second argument. Returns SUPPRESS when context is empty.</p1:text><p1:text label="44745e1e2d0d25b140f40f0081d00589">createNumberRange</p1:text><p1:text label="d683f8bf005561ba56f83a9e932804ae">UDFNodePool</p1:text><p1:text label="e38811182717df90ed4435ae293e49cc">Uses the first argument (the context should have exactly one value) as often as the length of the second context indicates.</p1:text><p1:text label="3620be02cfc039b89e376fe23ab30e1b">Produces empty value if argument is not empty and exists; ResultList.SUPPRESS otherwise</p1:text><p1:text label="5afb9bc217fc475655e5bd645acd3bc3">concatenates all values of a context seperated by second argument</p1:text><p1:text label="da06f03694edeb7feada050dc7a5c1de">UDFNodePool</p1:text><p1:text label="87ccaa98771b51f6b1acdb4314b5f0bd">createMultipleCopies</p1:text><p1:text label="393b580031ad331281272d3710d3e33e">buildBlocksAndGetValueByIndex</p1:text><p1:text label="9c54132bbdf0c75cf8601fb9509f2084">Puts all arguments sequentially into one queue</p1:text><p1:text label="1e401bce75506e3397b89e20bd2dedb0">UDFNodePool</p1:text><p1:text label="4bdffc9a3532d31c1dc231d9e6995106">UDFNodePool</p1:text><p1:text label="7703ac075d3830d351a9dd688052ba22">formatByContextExample</p1:text><p1:text label="e49151b25dfb164e79df713170f6935a">UDFNodePool</p1:text><p1:text label="38c017d0d7541b47756d0820d86c9a86">assignValueByCondition</p1:text><p1:text label="f8c7b95d5f5c4331ce342430994d36bd">UDFNodePool</p1:text><p1:text label="f54850853e5e5064fc7b89349f8f5dfb">UDFNodePool</p1:text><p1:text label="0bef97849f2db8423c71dac3a9a2643e">UDFNodePool</p1:text><p1:text label="eac3dac369871b453664493f8b6a4694">Fragments the first argument (a single context value) into a max. number of peaces (given by the second argument) of length from the third; the last one may be shorter. All arguments are treated like constants.</p1:text><p1:text label="75c9b1807b082b2032fda246b89e10ef">Removes all multiple values from the context.leaving only the first</p1:text><p1:text label="4f43f1a1eddbbbb1a4c9f99a8e04b6fd">UDFNodePool</p1:text><p1:text label="641f5c96f41d864421d8615089581c2f">useOneContextAsMany</p1:text><p1:text label="ee5416d897bbae842772c2c7555fc43d">DO NOT USE ANYMORE!!! Splits context in first argument into blocks defined in size by parameter. Returns SUPPRESS when context is empty.</p1:text><p1:text label="895acf3cef296f530a6329e2c1020b4b">returns a value from a context(arg1) by given index(arg2) (starting at 1)</p1:text><p1:text label="79fa5a1fa7669fa2ba000efc2de5b1ae">existsAndHasOneOfSuchValues</p1:text><p1:text label="58abc5f5c994d70a0aebb87b061c5d41">Returns the first non empty context value (or ResultList.SUPPRESS if no such value exits).</p1:text><p1:text label="dfc17064a5bc78885ac9bf98a62b83de">UDFNodePool</p1:text><p1:text label="2e5de39522f8e06c2573ca5a70052d46">createContextsForFixedBlockSize</p1:text><p1:text label="4639fce3233a4956b9f7177efb3c6cd2">Produces empty value if argument is not empty; ResultList.SUPPRESS otherwise</p1:text><p1:text label="51642094ba5f3c4895a47c9d22eebdbc">rearrangeByKey</p1:text><p1:text label="f3436ff3d003dce37272b0a45e78db4b">splits input string (Arg1) at given delimiter (Arg2) and creates a new context value for each new value</p1:text><p1:text label="290ae6fa3be6205e7bd6754586f45f5c">UDFNodePool</p1:text><p1:text label="b0f5df0947abf5308cebf5611f407cdb">Produces &quot;true&quot; if the argument is not empty; &quot;false&quot; otherwise</p1:text><p1:text label="db8d754c8504290d61677960eab8f1e2">UDFNodePool</p1:text><p1:text label="9262b2d5c2bf8084617e301ef438b938">UDFNodePool</p1:text><p1:text label="342d4f6964b2c91e41681ee15776a0bd">concatTwoQueuesToOne</p1:text><p1:text label="84ba4eb48fdd24c6eb0ae24d4e22e2a4">UDFNodePool</p1:text><p1:text label="2fbf77639ebdd33c78b27a41b311bb99">Copies each value of the 1st queue as often as the corresponding value of the 2nd queue indicates</p1:text><p1:text label="9244b1a274f966ebaa1b514c28bf10c5">Uses the first argument (the context should have exactly one value) as often as the length of the second context indicates and splits the result by each value.</p1:text><p1:text label="314203d30b41a75f6ca1d001a36a3e92">UDFNodePool</p1:text><p1:text label="576cf02aac0bc9de53bed225cfc655c0">existsAndHasValue</p1:text><p1:text label="e463aeb92b5042d06c1c8e30a1dfcd48">UDFNodePool</p1:text><p1:text label="2f2ddcbdf81ea42f6f606e544423adfa">Creates an empty string for each number of the missing Argument-to-Argument 2-intervall</p1:text><p1:text label="4230db861fb117d43de0c2b7de086e73">Passes a value from the third argument when the corresponding value from first argument has one of the value contained in the second value (these conditions are separated by a semicolon); passes ResultList.SUPPRESS otherwise</p1:text><p1:text label="91d371a652ff29ba71596bea548b6d0b">UDFNodePool</p1:text><p1:text label="b41ee68dae837e140fc53d5c8d239089">buildBlocksAndGetValueByIndex001</p1:text><p1:text label="57b6de4b23ae1b3c6ccc76aeaa7c2094">concatToOneQueue</p1:text><p1:text label="c713b8497c559ac72e3dc818d99c79eb">UDFNodePool</p1:text><p1:text label="c1894a1426c55375ea6120374632e506">simpleUseOneAsMany</p1:text><p1:text label="4267f735bf2e4774df04b489c2d2f007">getFirstContextValue</p1:text><p1:text label="120dfb24743da8b8426669281c0ac1c7">Maps every context value to itself when not null and not ResultList.SUPPRESS - maybe the context queue will get shoter&lt;br&gt;</p1:text><p1:text label="64b7df503bb0b8e9f9bb1c9ce847fa4f">Produces a single  &quot;true&quot; if the first argument (a context queue) contains one of the values passed as a constant in the second argument (separated by a semicolon); &quot;false&quot; otherwise</p1:text><p1:text label="b6a43438a5e5eb323f229eef6a9df5d5">UDFNodePool</p1:text><p1:text label="9beaf5f207f0d363d9aa1dafc323ec20">getValueByIndex</p1:text><p1:text label="ff6b61fff5a0cee26d152208d2aadc2f">deleteSuppress</p1:text><p1:text label="5b892a066210a2b07feabf52e3d4d333">Maps every context value to itself when not an empty string; to ResultList.SUPPRESS otherwise</p1:text><p1:text label="2be8492173311b622c9092fcfe2c34e3">Splits context in 1st argument into blocks defined in size by 2nd argument. Returns SUPPRESS when context is empty.</p1:text><p1:text label="63a47e2ff07c80c4367200e5e00615f7">Produces empty value when the first argument has one of the values passed as a constant in the second argument (separated by a semicolon);  ResultList.SUPPRESS otherwise</p1:text><p1:text label="53e525f6492b7d389b2c47ca3f1ae428">Uses the first argument as often as values exit in the second argument.</p1:text><p1:text label="e6b864d13c6107f3a71c250cd690e07f">contextHasOneOfSuchValues</p1:text><p1:text label="33723a422dd524666c5c2c777d2e7f76">UDFNodePool</p1:text><p1:text label="0301e8fe04439734a03fde74ff4e44cd">UDFNodePool</p1:text><p1:text label="9b7f1ea178264d132e9fac8d36afa37b">Produces &quot;true&quot;if the first argument has one of the values passed as a constant in the second argument (separated by a semicolon); &quot;false&quot; otherwise</p1:text><p1:text label="12aa50dabca896e2efbd64ba48bff2be">UDFNodePool</p1:text></p1:texts></p1:textObj></p1:textInfo></p1:generic><p1:content><fl:FunctionLibrary xmlns:fl="urn:sap-com:xi:flib"><fl:MetaData><fl:blob type="zip" zipped="true">!zip!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</fl:blob></fl:MetaData><fl:ByteCodeJar><fl:blob type="jar" zipped="true">!jar!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</fl:blob></fl:ByteCodeJar></fl:FunctionLibrary></p1:content><p1:inner /></p1:xiObj>