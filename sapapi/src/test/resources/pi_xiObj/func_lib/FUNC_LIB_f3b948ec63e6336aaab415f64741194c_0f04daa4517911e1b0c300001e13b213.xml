<?xml version="1.0" encoding="UTF-8"?>
<p1:xiObj xmlns:p1="urn:sap-com:xi"><p1:idInfo VID="0f04daa4517911e1b0c300001e13b213"><p1:vc vcType="S" swcGuid="0050568f0aac1ed8878a92199a65f7cb" sp="-1" caption="B2B MAPPING KIT 2.0"><p1:clCxt consider="A" /></p1:vc><p1:key typeID="FUNC_LIB" oid="f3b948ec63e6336aaab415f64741194c"><p1:elem>UDFNodePool</p1:elem><p1:elem>http://sap.com/xi/XI/B2BMappingkit</p1:elem></p1:key></p1:idInfo><p1:generic><p1:admInf><p1:modifBy>sap</p1:modifBy><p1:modifAt>2012-02-06 06:17:11.207</p1:modifAt><modifAtLong>1328505431207</modifAtLong><p1:owner>sap</p1:owner></p1:admInf><p1:lnks><p1:lnkRole role="_inner" kpos="0"><p1:lnk rMode="R"><p1:key typeID="FUNC_LIB_PROG" oid="cd5bb2d854d739afb5690678a3f18d47"><p1:elem>UDFNodePool</p1:elem><p1:elem>http://sap.com/xi/XI/B2BMappingkit</p1:elem><p1:elem>class</p1:elem><p1:elem>sap/com/UDFNodePool</p1:elem></p1:key></p1:lnk></p1:lnkRole></p1:lnks><p1:textInfo loadedL="EN"><p1:textObj id="0f04daa4517911e1b0c300001e13b213" type="0" masterL="EN"><p1:texts lang="EN"><p1:text label=""></p1:text><p1:text label="8f04dfc2fbd9ea7fa4d1dc1e231d1903">Copies the whole context of 1st queue as often as the corresponding value of the 2nd queue indicates</p1:text><p1:text label="2123244cfe17cf5bd6a02e1709f20413">UDFNodePool</p1:text><p1:text label="d43b477b7dc6c0fb3ec5e0e364f2cbc7">UDFNodePool</p1:text><p1:text label="b229e44786413757026a207acb45da6a">Puts all arguments sequentially into one queue</p1:text><p1:text label="743864e637bcf56fd341969563f18285">splitValueStringToContextValues</p1:text><p1:text label="2efe27e9cac86c8f94accf85b1e226c4">UDFNodePool</p1:text><p1:text label="088dc85b618dfc4f4c67e8e0c2fd7da1">concatContextValues</p1:text><p1:text label="65dccfd9f281dad3e1806fe015c51696">format contexts in inputQueue by values (representing contexts) in exampleQueue</p1:text><p1:text label="689605282b4d6c39151eec254d2cab44">createMultipleContextCopies</p1:text><p1:text label="df69f3b4efc4502caaad4a0fd02e1d8c">createIfHasValue</p1:text><p1:text label="31277d888a2425b5b818591b344f2da7">Splits context in 1st argument into blocks defined in size by 3rd argument and returns value at index given by 2nd argument. Returns SUPPRESS when context is empty.</p1:text><p1:text label="58a3ce7fc46d369a1275548a2aaa92ff">UDFNodePool</p1:text><p1:text label="503f0ddfd8353f49e4a483c9e8085178">fragmentSingleValue</p1:text><p1:text label="08fbe7d8fe716f18e1c9ab7b73957746">createContextsForFixedBlockSize001</p1:text><p1:text label="bd985c3248484f960c1fa0761aa3f9b2">simpleUseOneAsManyAndSplitByEachValue</p1:text><p1:text label="fbfb952e5905f151f74d65659d2c7069">UDFNodePool</p1:text><p1:text label="b30fca9f25237bbb7b69a2fa3851db2f">UDFNodePool</p1:text><p1:text label="9459f0e41d58c5ba469a2cbb4b481807">createIfHasOneOfSuchValues</p1:text><p1:text label="0c6d1fb2c30526c175cc6fa5917e6aa9">Rearranges the third argument by the corresponding key set in the second argument formatted by the first argument</p1:text><p1:text label="75dac575aff667065b75491f37bb6efa">createIfExistsAndHasValue</p1:text><p1:text label="85487e28ae1a4d7f1a61e55d1cbd54de">UDFNodePool</p1:text><p1:text label="c61b1eafbcdd9e978e7af6a11545fbdc">passIfHasValue</p1:text><p1:text label="4370c272b37a786f1956a5607c7b7085">deleteMultipleContextValues</p1:text><p1:text label="1986c30d8b3015ca42c66511ce6e1279">DO NOT USE ANYMORE!!! Splits context in first argument into blocks defined in size by parameter and returns value at index given by second argument. Returns SUPPRESS when context is empty.</p1:text><p1:text label="44745e1e2d0d25b140f40f0081d00589">createNumberRange</p1:text><p1:text label="d683f8bf005561ba56f83a9e932804ae">UDFNodePool</p1:text><p1:text label="e38811182717df90ed4435ae293e49cc">Uses the first argument (the context should have exactly one value) as often as the length of the second context indicates.</p1:text><p1:text label="3620be02cfc039b89e376fe23ab30e1b">Produces empty value if argument is not empty and exists; ResultList.SUPPRESS otherwise</p1:text><p1:text label="5afb9bc217fc475655e5bd645acd3bc3">concatenates all values of a context seperated by second argument</p1:text><p1:text label="da06f03694edeb7feada050dc7a5c1de">UDFNodePool</p1:text><p1:text label="87ccaa98771b51f6b1acdb4314b5f0bd">createMultipleCopies</p1:text><p1:text label="393b580031ad331281272d3710d3e33e">buildBlocksAndGetValueByIndex</p1:text><p1:text label="9c54132bbdf0c75cf8601fb9509f2084">Puts all arguments sequentially into one queue</p1:text><p1:text label="1e401bce75506e3397b89e20bd2dedb0">UDFNodePool</p1:text><p1:text label="4bdffc9a3532d31c1dc231d9e6995106">UDFNodePool</p1:text><p1:text label="7703ac075d3830d351a9dd688052ba22">formatByContextExample</p1:text><p1:text label="e49151b25dfb164e79df713170f6935a">UDFNodePool</p1:text><p1:text label="38c017d0d7541b47756d0820d86c9a86">assignValueByCondition</p1:text><p1:text label="f8c7b95d5f5c4331ce342430994d36bd">UDFNodePool</p1:text><p1:text label="f54850853e5e5064fc7b89349f8f5dfb">UDFNodePool</p1:text><p1:text label="0bef97849f2db8423c71dac3a9a2643e">UDFNodePool</p1:text><p1:text label="eac3dac369871b453664493f8b6a4694">Fragments the first argument (a single context value) into a max. number of peaces (given by the second argument) of length from the third; the last one may be shorter. All arguments are treated like constants.</p1:text><p1:text label="75c9b1807b082b2032fda246b89e10ef">Removes all multiple values from the context.leaving only the first</p1:text><p1:text label="4f43f1a1eddbbbb1a4c9f99a8e04b6fd">UDFNodePool</p1:text><p1:text label="641f5c96f41d864421d8615089581c2f">useOneContextAsMany</p1:text><p1:text label="ee5416d897bbae842772c2c7555fc43d">DO NOT USE ANYMORE!!! Splits context in first argument into blocks defined in size by parameter. Returns SUPPRESS when context is empty.</p1:text><p1:text label="895acf3cef296f530a6329e2c1020b4b">returns a value from a context(arg1) by given index(arg2) (starting at 1)</p1:text><p1:text label="79fa5a1fa7669fa2ba000efc2de5b1ae">existsAndHasOneOfSuchValues</p1:text><p1:text label="58abc5f5c994d70a0aebb87b061c5d41">Returns the first non empty context value (or ResultList.SUPPRESS if no such value exits).</p1:text><p1:text label="dfc17064a5bc78885ac9bf98a62b83de">UDFNodePool</p1:text><p1:text label="2e5de39522f8e06c2573ca5a70052d46">createContextsForFixedBlockSize</p1:text><p1:text label="4639fce3233a4956b9f7177efb3c6cd2">Produces empty value if argument is not empty; ResultList.SUPPRESS otherwise</p1:text><p1:text label="51642094ba5f3c4895a47c9d22eebdbc">rearrangeByKey</p1:text><p1:text label="f3436ff3d003dce37272b0a45e78db4b">splits input string (Arg1) at given delimiter (Arg2) and creates a new context value for each new value</p1:text><p1:text label="290ae6fa3be6205e7bd6754586f45f5c">UDFNodePool</p1:text><p1:text label="b0f5df0947abf5308cebf5611f407cdb">Produces &quot;true&quot; if the argument is not empty; &quot;false&quot; otherwise</p1:text><p1:text label="db8d754c8504290d61677960eab8f1e2">UDFNodePool</p1:text><p1:text label="9262b2d5c2bf8084617e301ef438b938">UDFNodePool</p1:text><p1:text label="342d4f6964b2c91e41681ee15776a0bd">concatTwoQueuesToOne</p1:text><p1:text label="84ba4eb48fdd24c6eb0ae24d4e22e2a4">UDFNodePool</p1:text><p1:text label="2fbf77639ebdd33c78b27a41b311bb99">Copies each value of the 1st queue as often as the corresponding value of the 2nd queue indicates</p1:text><p1:text label="9244b1a274f966ebaa1b514c28bf10c5">Uses the first argument (the context should have exactly one value) as often as the length of the second context indicates and splits the result by each value.</p1:text><p1:text label="314203d30b41a75f6ca1d001a36a3e92">UDFNodePool</p1:text><p1:text label="576cf02aac0bc9de53bed225cfc655c0">existsAndHasValue</p1:text><p1:text label="e463aeb92b5042d06c1c8e30a1dfcd48">UDFNodePool</p1:text><p1:text label="2f2ddcbdf81ea42f6f606e544423adfa">Creates an empty string for each number of the missing Argument-to-Argument 2-intervall</p1:text><p1:text label="4230db861fb117d43de0c2b7de086e73">Passes a value from the third argument when the corresponding value from first argument has one of the value contained in the second value (these conditions are separated by a semicolon); passes ResultList.SUPPRESS otherwise</p1:text><p1:text label="91d371a652ff29ba71596bea548b6d0b">UDFNodePool</p1:text><p1:text label="b41ee68dae837e140fc53d5c8d239089">buildBlocksAndGetValueByIndex001</p1:text><p1:text label="57b6de4b23ae1b3c6ccc76aeaa7c2094">concatToOneQueue</p1:text><p1:text label="c713b8497c559ac72e3dc818d99c79eb">UDFNodePool</p1:text><p1:text label="c1894a1426c55375ea6120374632e506">simpleUseOneAsMany</p1:text><p1:text label="4267f735bf2e4774df04b489c2d2f007">getFirstContextValue</p1:text><p1:text label="120dfb24743da8b8426669281c0ac1c7">Maps every context value to itself when not null and not ResultList.SUPPRESS - maybe the context queue will get shoter&lt;br&gt;</p1:text><p1:text label="64b7df503bb0b8e9f9bb1c9ce847fa4f">Produces a single  &quot;true&quot; if the first argument (a context queue) contains one of the values passed as a constant in the second argument (separated by a semicolon); &quot;false&quot; otherwise</p1:text><p1:text label="b6a43438a5e5eb323f229eef6a9df5d5">UDFNodePool</p1:text><p1:text label="9beaf5f207f0d363d9aa1dafc323ec20">getValueByIndex</p1:text><p1:text label="ff6b61fff5a0cee26d152208d2aadc2f">deleteSuppress</p1:text><p1:text label="5b892a066210a2b07feabf52e3d4d333">Maps every context value to itself when not an empty string; to ResultList.SUPPRESS otherwise</p1:text><p1:text label="2be8492173311b622c9092fcfe2c34e3">Splits context in 1st argument into blocks defined in size by 2nd argument. Returns SUPPRESS when context is empty.</p1:text><p1:text label="63a47e2ff07c80c4367200e5e00615f7">Produces empty value when the first argument has one of the values passed as a constant in the second argument (separated by a semicolon);  ResultList.SUPPRESS otherwise</p1:text><p1:text label="53e525f6492b7d389b2c47ca3f1ae428">Uses the first argument as often as values exit in the second argument.</p1:text><p1:text label="e6b864d13c6107f3a71c250cd690e07f">contextHasOneOfSuchValues</p1:text><p1:text label="33723a422dd524666c5c2c777d2e7f76">UDFNodePool</p1:text><p1:text label="0301e8fe04439734a03fde74ff4e44cd">UDFNodePool</p1:text><p1:text label="9b7f1ea178264d132e9fac8d36afa37b">Produces &quot;true&quot;if the first argument has one of the values passed as a constant in the second argument (separated by a semicolon); &quot;false&quot; otherwise</p1:text><p1:text label="12aa50dabca896e2efbd64ba48bff2be">UDFNodePool</p1:text></p1:texts></p1:textObj></p1:textInfo></p1:generic><p1:content><fl:FunctionLibrary xmlns:fl="urn:sap-com:xi:flib"><fl:MetaData><fl:blob type="zip" zipped="true">!zip!UEsDBBQACAAIAAZUTVAAAAAAAAAAAAAAAAAFAAAAdmFsdWVdWPc3GwCjpTalWnuU2orYe1Nqb7FXpEasEqv2VmoLYjT23qNi7xl7tFWzlNoUVYLgfe+n951377nnnnvvf3D1tXBwKbEI/0MO6beKWP+Fp/+Ru4MPSAXkA+L/4O52Yu3uvSqZ/uD2SGwGhMG+M6CaETnWqxdZJxoe1hIau/Z7Lg1WVQCLSDcLyiqW12Mrq5jro1GSc+VUVo4bgJe85AsiUXrSy8WktzjS6NV1yVdtoroY7mOxzpM6/CKQAj16C9hwfoNZP+oTffD7IPg59p5Skx1CGWRqDESPHQiceGyf2ak4HT/TcKIIvHVtOD/9+xEW9uAXuPYqTWFfLFYGHrZ+T3Ly2P0mbGP5Zvlv9+T6ad7WbFffsV9X2PoJDhH93PnWnu3PkDj8y2tuYjLpY6KwUEQ5rEeX65zzJFT0dO0GEfbZL7kt5WcQjKhR+sLIvHvIbCvsLgLOXiRRzmn9D23365/aXNEbJXQhGzMjeluDsgK1NTA6gmpQ21OjwWBHGLrzndyEBk1Zvg+i6LuvuP+X/kKJMqkcdqH8WnBJ92Pfl21j3g/b64HuCs0FuEz6SQeChfdWB5BDAvTxJA25yveUmledl0/Q4Q4zB9bVnaPE1WOI2krm2yr6eyF1QUlZdUzNnFaFEEdIQ5jOLGg4KOnk7d5ZOIryiNGn/YMXZegggUL8c40eLW74LURx67EqjF8eGy4YKKot5xY3XWwDlqYVr250NYkloB56uZEUqtjjKV2lLMRrUXYk+diDdvnEmOqz4BpOFrNtU8Ic8zr1jlkge6FUyePsmzn9kLrEZb3/O+sETbhRPESY1NDgnuLuIq+gVJVdmi7BXvJW6J9hoDSmCy6oe1l0EKQURt9/dHqFpH9lZH6GzSxI8PrBCgpFBzGSlofkkkvnl4pAE2LiFNjN+zDR0QYTtn8ovuVdLe/9DHu8vDpOVDkQS+q7JSKHGx/pJP9rFXNughAWuF2qS5I+uTikErL5gkMc6K9DhjJJwDAbWzO8FYLcjvMcpNWFoP/0m+NtuHl8knYNNlYNC3K8IXmclOeNtjp/QS9xrMRQnZIHUOpYVvYzy2wV427eIjfKexDCw5PrIS7Jzv9A9DvDMr1ITN51ZcOuv91ZnB4wMyKhHBW9m4DQ4aJAZ4k6dPie71lau9+FGu+evPyqmTw4ILvuhakp0k12zJrn/RWDo0w3TUMVxMSDzAd6wkN1pbkr2RcfxLhYDuWRwlHQkKcHY1vmo9mWeUfLA4waWt4iCK/qsyVX4k4/HdRcCsy46m8rPJW7lJ2+ua3Naohzs3UBO8KfaeaR/Z/+R8mI6EFYRPGc9v5wQsQkdgeuSvg1uI8Zz+DHCtfvwv7yFcN2u2dyB0QOmOu++HvdYhzKtLNUm7F50xcLDTuihPuZNJ+Vti9PrAt0Uz9ymta8PX91XKRiVy+iP9U63nq5mk47CrEOnh/H4Vl2t3YLgXDB+vXykkLc/IH7e7SKZK/pzhl0MfhxvOXCExKfmsXsaSRsL/qdouoG+8VQBiVNAvlWg+2Jw/D3xHtQT9S8zyOBn4h+wd7d70wroryMGOVGTfzNCNU7bV0xocyFODREOYrlI+slS7e+ovEgbnOKQ6+EwJNOk8M3m0FJFOjDC2ZiOWzuR6vuk4iUTL38OFSY4SERD54eLcVYC8Xr6mYORTxVAKvFvnjhtFrU7D9fWjWw459FV4XvUyG76pcltLdySoM5PXaZPB9otVlkFXALBi550KucshpmLDOinlTgNGUF8GBA2MbG2yE5+6DSAd9AmGh1AAOCTKoT993Z7YEUJoJluE/u9d/2ENUbkmSiJ/QvbyGg0hIVJr6/irylwzLYxdDik7cN3Xjx4d+skK0BzTu/+PbF6l2m+a2C2jKeYrbIh58Z5bZkiJbqgdohK7WIP+VUlnB7g9opa6PP1J2u1YTtroY+um3TAw2rYd6rygfTz7O7sVW92HjQLNqmL1Tmd7quLkqBYFpuFbTzKDco8vazvtkRI8efHk8/SrIZzxmm2Y1Ae+klQj1gE5BqlU/YuuA55mXCKmeb0RqpTn0JRHCzWvsPFkMUXYtW8MamhQR9ud2qrK7mZnqjxaCshoW89rX8ZTYYz8jZJoGEmZQSD6mq6BwwabTqbU2zxQnWpEsufyh2ns8ZIP6+4l/c5bjXabi0nts7IrZ+ZkRzUUtHweH1hSdhHEo+EZVEfE3kmpXGd1J7gZzcnEhVhmsNiMnHUlLKGezvrJA0VPr8tZ07L5prwiWmUe5lnJJj6my1tTtS+wgwNXW1W2whKKAawD/TMeIBC/3eMML72ogCPI8G58bYPA31AhTawpokukpV1PIUyimvKYMriV01cAsyRhsifR6FQ30zTxUqJK3rlfR5lx1vkNbI9FqKUSSQzfTCQY/R8avMF59bi2ZjMA93Yl55mXgBt+fzQ6R44ru4la8lnFOi8Pr+dy/S6AxSNyJ6W5nWkjunQQaem9jbq9+QfULViBbjM30zyekV4HlDmCJVJ//Pg6pCwS+B5eM1CuUGnQWjRhMKRdSFxFSl9ufKb2i9zB/MT/8YtzD4xd+iWHibhEkZEQEabMXcDDlvZ8ie15mYI/ZK3fUAETud9r/UxfIqas66d9KUHag7MYXmbNcfya97omDM/bddErxNN88Q/C9yekZFSZOJUjL4fm1+VLJb//o8IRkZGzIwRKBeub1elatnysuGzL5c65ZW5CVXUYzPNh4mTdeZtRJo26m/DrGvyA6sWbuyoYzPwl5za/mBbeXH58rPQ5PcukJWHz3DyEZN8EPTTIpy7TQt5gwNYQWk9Uy84f8p1xDZ9bMXPBzyIojBCEnC0p7d1WGA44aI5j2F7svQPOEVqjQMTyJRszDB8iU5NTcma4ItuXnrL1qVHctlLmz1E1iv7qm8ev8O13B/vzvkrU314laXpk26JvV3GodG1rAUChaH2O6grs9IEdbVmlfNLcSsXTWvLhwNWGu8qe5sApmwZzASFyLP2qs74qg1guZldQash04oBkyfBJIsEBox589gFS/EdQSGnR1qBYBupxbnVcNsAF9+Vxp0BlXAZ/24e6eFxpPVs7zolZcirPyRrv5OXY7+yD8lMjJ468tV6whE7vpyR8rpMbWPU5ufv5+rn9O1fOff8kKZ9y7+ezrTp93mQP/8NHBXdU+/ZK5uYumCZs7HzLa5nzhv5AnnXVjbhCSTPV6P3TZVsiDm+fR6C6RcNwC2uxFE44wrHHPMeJyWR02+pwaMQSLBbuyeCscbY8rxfOjRZxXG1y/NLRLnuOlevWZh0YxspjxBhC0FHUcSfzlKuc8YTWEuwmGu6o38Dh2YyITBi1j0xmI0BIw56F9QhWvtRzs+F3Gdbi8FO5LGMG012wCaSzZTFeezIuW4oomsUKGRrGSCIDH2llF02/br/PRXqLJ+nvuqsnhL209/bffs9aHLV5wU9GRfsb7sULQNdrHpKHIlScKmv9/nLJ88kTwbQok6TCbENIVvBIxvRqqY4OIKxoIFHNTc9S/fS+l9SyEyxooq5uST3RzZwdUU1C+NTjwUOCuiM5rKH/pGP/XevDvmt288P5P+oc/4pwBzmjTquWuhf2bl6bo9f2LYy9vVBkhG7VLus726CQ7le3F7cI35NssrqJ67/c7biyb4wryJj6uOPR9zYoyFgMFgzvTQxP3TBInI8KdMDnjIKxFoSLBkgVI00VzFA+G7L/VFo3FB/GyKpEDpqEQDfLqsJSiU9Z4KeGRfKkvaopWXN+Fr699yQm3BsortJIOF/HdBtx0xgI7N8+3ZVcWa0jpF2Pv7sGr0SKqejm36bwFBc5AZbqTLM9dZuc/pelLPdYewe2DgxKhEwNZr/lOaVdjEQbS0Q/GWAhmWZuakafaNfIKO9K47ap+B9aucjjN2bbSOTNIwS4HLlgFyanIfIqwPm0n+Hfk0gzLg61ehhqTseh6B2HYrxSxHDVaqy+23P2+F/ObrvhRrB2vzZnwdtoHsfslORHUi08Slxi2+PvnmouPeCSywi7zdxiCYPMCG2Jx5STokdPSAfAW5Z4SF5Za8aViE0b/Hi4ZX9zvl+sQ0FHKnzOBMd9KA1soCNHCJLfPPr6Z4yw2CsFrEA+wOs65SPr3q5GVFcKBa5p5t2m3ox+lUlnezYqGalO9l13XZjawF5c/X+9Ykv9Y9CRZXyK87n9BzcNLOeoni74Fy0aD3gWRB0VWCtwtf6srOtUfE0XlGhVDV7avhBApi29xPEMAVlkvOICXE0R67djy1FbeXXlBGI2J/vJwyf54d22CC0UqvPyPtZwfn03cwf+yl0BEUbq024qXMNyevG7OtdfZZUeq/uF562fDDs7anZPRJHVvkTcdHvpSVFCpYnnr4zwG03mNO1ZBiThI5bfATU9YUWw+IpwNYK5YP6KmqYjih7yAmJ7TCh0+N1/9CPytO3DQKjoGM8KUPY9XczkOWBhemdyqFCZMvlJymrW0M+VJIS7Rb6EpIwPs/uoJogkzR2ToNI1Gg/vrSDMxo6dUHIaGBMbpJaocnuQmjwF92/M2qGjU5fMTCxqqcNV7ddSMiNLJPSha+fxejIOfHr6nHWPYfTubwYtfE4OF155iqn9RQskzF0waJQDXO952fuhaKSwlfcHvKZQir0Kf2M8/zcYmbX4iTXq+r/yK0nD9Rd4mU0VaZ0iU9rIQLhGYjhJ3yAjo9Wghm3OW4+Hac98R3J5Kza1Y63KUQzMgux6zWOd49mxaX+EeBiRlRB6fDydqZMf01AztteVHuSw/lO8HLwBV386gV54y14Ap8TZX+7G3eWSEehycg15CxaVJQgdJLWknUXDkt1rrZJCt/kDt4Ld3Ekq9kzk+GHJSy8wpYV8v4OWMZ2hMFfdjr2lPcCDotIjkCcq1jpg64/IfIjQyzQdktEwRGeUyHxzZqedhmzzktQctLZM1hE4dOp4b1DtnL7RpjGkeF4BP7KvEbtyUDjaYxT6V/hz1wm7ax0B8Zi1ezAfx0Umu+iurD+HpDoOi7dBMp5EOtlbX4uCvqPV4MYDTg5RHICwjMp4EWVatqjxnHP1vU6uhzfSoou9cGF793k318elk04pGg9/bGjCxRDJre2GGdh40qAv8aJ0pbLUPMOiT/eCIrXxC9OsLYkblzTO1QGZpkJioJCij7S7P37a8xYDAlo6bTuZonIiyBvcYEZaK6YnfSVyfwOcBiwhp0ComZMkKtvKnOIPDg5PMncBK9l8QISFvKXuCJOFXdWlHuzXPxfAhck1FzDsfJZJwtvOcBtRB30k3mv5xVNEweVj6X9rJu5TUxcxR9GnbDUxTjhHPTm6XuMyFwQw081nVyr3vo1Jh6FpLHIrFz5RFVWXIislP9ddXD7qFEiizQWfdiH7X6kXR3wp/ueysD0ioE6vejKdpHSUtX62gs/AshBQNpXvGMo4H36Er14e8u/vijvN5moQ/YJzlL+81VcoX+6AiBhMdTjqWzuncGbjN0vDrhQh6BMQ9MkLbVKUCGe7zYr+5fxRytrPkw4ppMmkEDozXfl3H87j5Oahm6/TXbYN7ddPdrqEQ3A8O5Iq73tt1ndR8tsJcICbwPl8LmBfsqx0qTEQBjLkv3j7ySPk+oQdovcdqs4VW6Npq88thWfAh92yzlcUBH8APBp72JJ4jCFxGOL5Ef2V4UvDiecjFZmZLIKoqm3xafGZ1m7Dz/XJS36qdbTFMikDya0Jk8uUTnHPcGNzBAu1+9wj6Awq6UCJSsw9PI3HjxRqTINFt7MYOrshHLTlyCMdmE7Efqz9oW1+VKez4NfBIzRMrQLi18KynLxIqRIvZ1Ngyev3teC0PmqDMtjoAwzLNmxfojIQMu/jU50QAuLuqlaro+vtQyxyhOK1/L/bqzRmGKF/JrHlsnIJup3RL4IDQwp6VnN3TqrV7gfa3UQ2tZQ+nNpc420124Qb9Yr17+qEgmab/N4M7p72JQc2/2r0ETUQc86Jz3HlA9q3GKZRP1eVrA4NL3OoF3PD7MfKeuKnT8Lw5JQA/Yo5h4LGZ0UYMXHrdZ60gb7Ep/vDVq2d+QiVs+cEnoBeLPTovuR2OuCon03GwAVdOijLIXW9y9DpNquxSsnt96HibyMPjuQa4FmerHtuegBxytMEMGtX3vxHtcNsMd9cs9X/qerALUlSuzyBYWc6TD+w+GbDUAluYmC7uDVFh0b+Bc7rZCLDdDbl7Bjuy/AvAGVfwUcZPW8xb6CcQanCksPqqEx1E+dqtRUIZBZc7G805P5TgEO7S48QMxHwY/RvJ0iwshyMUOfsTrFykFXn2aIIisMPvAYk+6HS04I6ZR9Cd/W7svQ5WMcZ4zgcPgdZLoBC5fQq7NZucl9RGqIC32yjeCobc7y41z0mIQjvlh7ujt0Jd4RlJaoEHp8F6kfGf2MhxICwkZA6rpEVragn/seg6/RDnlyCOnq6zwDcJ8dh+PziNtg91U+bWftOwgwtQIxtIbLOjeZepoaXhnFd38Y7s5O/8cLB+klSyP+XOXUrDh4eaWKvJQwgD9Q5slYgLFSXAW2eJ8p/jxYqzcc5K2R6dbyVXb/DCi+1qiaxRunYwwoFYo7Zji6BXzu6dB4VmgHQP2RsO8QjM1jY04PMdrGcJb6wLoiKa+zZ3ODKhXMGKMAB0mA4h/0ntuTn8AsG3NekTXz+7yLestdofCLDFe8cyhR7s+SNxLe96XbCHY4BZIFmMqTG0sVcnRDvo7VNihzJrtS8frA5qdoXhURibPZJOI4LcAYASdb6Bue03DKI2c/P27xjvoIUGwxS+dhkdzUJItXvGePkBTvMup1JEJmch5ZhbJRZNprpsbwmIG9LHlrzvuwkYzE2xp7X2QC4YjLpO8U6r9LwJAGXEFxbb176lkysSqlEdcTQiaPGeiUfHjtsxXiULWRFFB+P4uXhUKqroEz1VNPoZOKJMwSkNNzJlfvjkIDm1cMJGtjdKTWJfjTRgWCmkvFiwEBOmGR3gv3xWsXTFpvY/73KA9c9Z4FfvT/10l88/xGS/8NmSnmN5yrV3OMH3rU6+NBT/XH8snqlO7CdPBt+LekEVDMAh3cUEFlOktsxTcW5uS/+KYv1U+UHjO+vA9H9aaVkO+VTui6BcUq7eEKwVozguIRguQlDE/u9yb3o9heYxvyDZbspokV6Nhhkzj8pmYiXuF8gogMpxtTfRSHEeXxUS06DePPbrH7gbeiUKCd8xW9+ZRym2qJmK93qstbg3ocz9Ot5zBOVl7KQ07wY4qYzjzrzz30J96trsKgtNis4LVjIQfRpgALsItlu1TqxyWR+bls52+MFSEiawTy7cU+JlHQk35MNj2wVHjOwgb97vcA0E30ovmW+f2D3Lekfdu1XVSi9FkHlj/ZFZq2JPs/3xielDQ1yIgrF35ClejwsLSysXC0tfCfkKJ9X8X7H9vT7H+P/77kNXXwsP/3w77P5T+j0dQ/W/6H1BLBwjPZltl0RUAANEVAABQSwECFAAUAAgACAAGVE1Qz2ZbZdEVAADRFQAABQAAAAAAAAAAAAAAAAAAAAAAdmFsdWVQSwUGAAAAAAEAAQAzAAAABBYAAAAA</fl:blob></fl:MetaData><fl:ByteCodeJar><fl:blob type="jar" zipped="true">!jar!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</fl:blob></fl:ByteCodeJar></fl:FunctionLibrary></p1:content><p1:inner /></p1:xiObj>