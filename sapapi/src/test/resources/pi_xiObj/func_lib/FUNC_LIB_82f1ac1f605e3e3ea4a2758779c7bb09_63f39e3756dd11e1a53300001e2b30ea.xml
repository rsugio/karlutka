<?xml version="1.0" encoding="UTF-8"?>
<p1:xiObj xmlns:p1="urn:sap-com:xi"><p1:idInfo VID="63f39e3756dd11e1a53300001e2b30ea"><p1:vc vcType="S" swcGuid="0050568f0aac1ed8878a92199a65f7cb" sp="-1" caption="B2B MAPPING KIT 2.0"><p1:clCxt consider="A" /></p1:vc><p1:key typeID="FUNC_LIB" oid="82f1ac1f605e3e3ea4a2758779c7bb09"><p1:elem>UDFNodePool</p1:elem><p1:elem>http://sap.com/xi/B2B/MappingFunctions</p1:elem></p1:key></p1:idInfo><p1:generic><p1:admInf><p1:modifBy>sap</p1:modifBy><p1:modifAt>2012-02-14 09:58:25.86</p1:modifAt><modifAtLong>1329209905860</modifAtLong><p1:owner>sap</p1:owner></p1:admInf><p1:lnks><p1:lnkRole role="_inner" kpos="0"><p1:lnk rMode="R"><p1:key typeID="FUNC_LIB_PROG" oid="80291ef403bb355387b242cd06216b31"><p1:elem>UDFNodePool</p1:elem><p1:elem>http://sap.com/xi/B2B/MappingFunctions</p1:elem><p1:elem>class</p1:elem><p1:elem>sap/com/UDFNodePool</p1:elem></p1:key></p1:lnk></p1:lnkRole></p1:lnks><p1:textInfo loadedL="EN"><p1:textObj id="63f39e3756dd11e1a53300001e2b30ea" type="0" masterL="EN"><p1:texts lang="EN"><p1:text label="8f04dfc2fbd9ea7fa4d1dc1e231d1903">Copies the whole context of 1st queue as often as the corresponding value of the 2nd queue indicates</p1:text><p1:text label="2123244cfe17cf5bd6a02e1709f20413">UDFNodePool</p1:text><p1:text label="d43b477b7dc6c0fb3ec5e0e364f2cbc7">UDFNodePool</p1:text><p1:text label="b229e44786413757026a207acb45da6a">Puts all arguments sequentially into one queue</p1:text><p1:text label="743864e637bcf56fd341969563f18285">splitValueStringToContextValues</p1:text><p1:text label="2efe27e9cac86c8f94accf85b1e226c4">UDFNodePool</p1:text><p1:text label="088dc85b618dfc4f4c67e8e0c2fd7da1">concatContextValues</p1:text><p1:text label="65dccfd9f281dad3e1806fe015c51696">format contexts in inputQueue by values (representing contexts) in exampleQueue</p1:text><p1:text label="689605282b4d6c39151eec254d2cab44">createMultipleContextCopies</p1:text><p1:text label="df69f3b4efc4502caaad4a0fd02e1d8c">createIfHasValue</p1:text><p1:text label="31277d888a2425b5b818591b344f2da7">Splits context in 1st argument into blocks defined in size by 3rd argument and returns value at index given by 2nd argument. Returns SUPPRESS when context is empty.</p1:text><p1:text label="58a3ce7fc46d369a1275548a2aaa92ff">UDFNodePool</p1:text><p1:text label="503f0ddfd8353f49e4a483c9e8085178">fragmentSingleValue</p1:text><p1:text label="08fbe7d8fe716f18e1c9ab7b73957746">createContextsForFixedBlockSize001</p1:text><p1:text label="bd985c3248484f960c1fa0761aa3f9b2">simpleUseOneAsManyAndSplitByEachValue</p1:text><p1:text label="fbfb952e5905f151f74d65659d2c7069">UDFNodePool</p1:text><p1:text label="b30fca9f25237bbb7b69a2fa3851db2f">UDFNodePool</p1:text><p1:text label="9459f0e41d58c5ba469a2cbb4b481807">createIfHasOneOfSuchValues</p1:text><p1:text label="0c6d1fb2c30526c175cc6fa5917e6aa9">Rearranges the third argument by the corresponding key set in the second argument formatted by the first argument</p1:text><p1:text label="75dac575aff667065b75491f37bb6efa">createIfExistsAndHasValue</p1:text><p1:text label="85487e28ae1a4d7f1a61e55d1cbd54de">UDFNodePool</p1:text><p1:text label="c61b1eafbcdd9e978e7af6a11545fbdc">passIfHasValue</p1:text><p1:text label="4370c272b37a786f1956a5607c7b7085">deleteMultipleContextValues</p1:text><p1:text label="1986c30d8b3015ca42c66511ce6e1279">DO NOT USE ANYMORE!!! Splits context in first argument into blocks defined in size by parameter and returns value at index given by second argument. Returns SUPPRESS when context is empty.</p1:text><p1:text label="44745e1e2d0d25b140f40f0081d00589">createNumberRange</p1:text><p1:text label="d683f8bf005561ba56f83a9e932804ae">UDFNodePool</p1:text><p1:text label="e38811182717df90ed4435ae293e49cc">Uses the first argument (the context should have exactly one value) as often as the length of the second context indicates.</p1:text><p1:text label="3620be02cfc039b89e376fe23ab30e1b">Produces empty value if argument is not empty and exists; ResultList.SUPPRESS otherwise</p1:text><p1:text label="5afb9bc217fc475655e5bd645acd3bc3">concatenates all values of a context seperated by second argument</p1:text><p1:text label="da06f03694edeb7feada050dc7a5c1de">UDFNodePool</p1:text><p1:text label="87ccaa98771b51f6b1acdb4314b5f0bd">createMultipleCopies</p1:text><p1:text label="393b580031ad331281272d3710d3e33e">buildBlocksAndGetValueByIndex</p1:text><p1:text label="9c54132bbdf0c75cf8601fb9509f2084">Puts all arguments sequentially into one queue</p1:text><p1:text label="1e401bce75506e3397b89e20bd2dedb0">UDFNodePool</p1:text><p1:text label="4c80b886de4626a5b6473d9a467c49f0">UDFNodePool</p1:text><p1:text label="7703ac075d3830d351a9dd688052ba22">formatByContextExample</p1:text><p1:text label="4bdffc9a3532d31c1dc231d9e6995106">UDFNodePool</p1:text><p1:text label="e49151b25dfb164e79df713170f6935a">UDFNodePool</p1:text><p1:text label="38c017d0d7541b47756d0820d86c9a86">assignValueByCondition</p1:text><p1:text label="f8c7b95d5f5c4331ce342430994d36bd">UDFNodePool</p1:text><p1:text label="f54850853e5e5064fc7b89349f8f5dfb">UDFNodePool</p1:text><p1:text label="51c379ab5b7f26b74152e9c6618d6905">suppressMultipleContextValues</p1:text><p1:text label="0bef97849f2db8423c71dac3a9a2643e">UDFNodePool</p1:text><p1:text label="eac3dac369871b453664493f8b6a4694">Fragments the first argument (a single context value) into a max. number of peaces (given by the second argument) of length from the third; the last one may be shorter. All arguments are treated like constants.</p1:text><p1:text label="75c9b1807b082b2032fda246b89e10ef">Removes all multiple values from the context.leaving only the first</p1:text><p1:text label="4f43f1a1eddbbbb1a4c9f99a8e04b6fd">UDFNodePool</p1:text><p1:text label="641f5c96f41d864421d8615089581c2f">useOneContextAsMany</p1:text><p1:text label="ee5416d897bbae842772c2c7555fc43d">DO NOT USE ANYMORE!!! Splits context in first argument into blocks defined in size by parameter. Returns SUPPRESS when context is empty.</p1:text><p1:text label="895acf3cef296f530a6329e2c1020b4b">returns a value from a context(arg1) by given index(arg2) (starting at 1)</p1:text><p1:text label="79fa5a1fa7669fa2ba000efc2de5b1ae">existsAndHasOneOfSuchValues</p1:text><p1:text label="58abc5f5c994d70a0aebb87b061c5d41">Returns the first non empty context value (or ResultList.SUPPRESS if no such value exits).</p1:text><p1:text label="dfc17064a5bc78885ac9bf98a62b83de">UDFNodePool</p1:text><p1:text label="2e5de39522f8e06c2573ca5a70052d46">createContextsForFixedBlockSize</p1:text><p1:text label="4639fce3233a4956b9f7177efb3c6cd2">Produces empty value if argument is not empty; ResultList.SUPPRESS otherwise</p1:text><p1:text label="51642094ba5f3c4895a47c9d22eebdbc">rearrangeByKey</p1:text><p1:text label="f3436ff3d003dce37272b0a45e78db4b">splits input string (Arg1) at given delimiter (Arg2) and creates a new context value for each new value</p1:text><p1:text label="290ae6fa3be6205e7bd6754586f45f5c">UDFNodePool</p1:text><p1:text label="b0f5df0947abf5308cebf5611f407cdb">Produces &quot;true&quot; if the argument is not empty; &quot;false&quot; otherwise</p1:text><p1:text label="db8d754c8504290d61677960eab8f1e2">UDFNodePool</p1:text><p1:text label="9262b2d5c2bf8084617e301ef438b938">UDFNodePool</p1:text><p1:text label="342d4f6964b2c91e41681ee15776a0bd">concatTwoQueuesToOne</p1:text><p1:text label="84ba4eb48fdd24c6eb0ae24d4e22e2a4">UDFNodePool</p1:text><p1:text label="2fbf77639ebdd33c78b27a41b311bb99">Copies each value of the 1st queue as often as the corresponding value of the 2nd queue indicates</p1:text><p1:text label="9244b1a274f966ebaa1b514c28bf10c5">Uses the first argument (the context should have exactly one value) as often as the length of the second context indicates and splits the result by each value.</p1:text><p1:text label="314203d30b41a75f6ca1d001a36a3e92">UDFNodePool</p1:text><p1:text label="576cf02aac0bc9de53bed225cfc655c0">existsAndHasValue</p1:text><p1:text label="e463aeb92b5042d06c1c8e30a1dfcd48">UDFNodePool</p1:text><p1:text label="2f2ddcbdf81ea42f6f606e544423adfa">Creates an empty string for each number of the missing Argument-to-Argument 2-intervall</p1:text><p1:text label="4230db861fb117d43de0c2b7de086e73">Passes a value from the third argument when the corresponding value from first argument has one of the value contained in the second value (these conditions are separated by a semicolon); passes ResultList.SUPPRESS otherwise</p1:text><p1:text label="91d371a652ff29ba71596bea548b6d0b">UDFNodePool</p1:text><p1:text label="b41ee68dae837e140fc53d5c8d239089">buildBlocksAndGetValueByIndex001</p1:text><p1:text label="57b6de4b23ae1b3c6ccc76aeaa7c2094">concatToOneQueue</p1:text><p1:text label="b6910f70e99c05dfe1cd9012f7ffadc4">passIfExistsAndHasValue</p1:text><p1:text label="c713b8497c559ac72e3dc818d99c79eb">UDFNodePool</p1:text><p1:text label="c1894a1426c55375ea6120374632e506">simpleUseOneAsMany</p1:text><p1:text label="d6b6d7dd2c1e9045794929c5b793613a">createIfExistsAndHasOneOfSuchValues</p1:text><p1:text label="4267f735bf2e4774df04b489c2d2f007">getFirstContextValue</p1:text><p1:text label="120dfb24743da8b8426669281c0ac1c7">Maps every context value to itself when not null and not ResultList.SUPPRESS - maybe the context queue will get shoter&lt;br&gt;</p1:text><p1:text label="64b7df503bb0b8e9f9bb1c9ce847fa4f">Produces a single  &quot;true&quot; if the first argument (a context queue) contains one of the values passed as a constant in the second argument (separated by a semicolon); &quot;false&quot; otherwise</p1:text><p1:text label="b6a43438a5e5eb323f229eef6a9df5d5">UDFNodePool</p1:text><p1:text label="9beaf5f207f0d363d9aa1dafc323ec20">getValueByIndex</p1:text><p1:text label="ff6b61fff5a0cee26d152208d2aadc2f">deleteSuppress</p1:text><p1:text label="27003afa95004a9537acfcf840b2db60">UDFNodePool</p1:text><p1:text label="5b892a066210a2b07feabf52e3d4d333">Maps every context value to itself when not an empty string; to ResultList.SUPPRESS otherwise</p1:text><p1:text label="2be8492173311b622c9092fcfe2c34e3">Splits context in 1st argument into blocks defined in size by 2nd argument. Returns SUPPRESS when context is empty.</p1:text><p1:text label="63a47e2ff07c80c4367200e5e00615f7">Produces empty value when the first argument has one of the values passed as a constant in the second argument (separated by a semicolon);  ResultList.SUPPRESS otherwise</p1:text><p1:text label="53e525f6492b7d389b2c47ca3f1ae428">Uses the first argument as often as values exit in the second argument.</p1:text><p1:text label="e6b864d13c6107f3a71c250cd690e07f">contextHasOneOfSuchValues</p1:text><p1:text label="33723a422dd524666c5c2c777d2e7f76">UDFNodePool</p1:text><p1:text label="0301e8fe04439734a03fde74ff4e44cd">UDFNodePool</p1:text><p1:text label="9b7f1ea178264d132e9fac8d36afa37b">Produces &quot;true&quot;if the first argument has one of the values passed as a constant in the second argument (separated by a semicolon); &quot;false&quot; otherwise</p1:text><p1:text label="f23bbb2527362070cfd8903809bb4028">UDFNodePool</p1:text><p1:text label="12aa50dabca896e2efbd64ba48bff2be">UDFNodePool</p1:text></p1:texts></p1:textObj></p1:textInfo></p1:generic><p1:content><fl:FunctionLibrary xmlns:fl="urn:sap-com:xi:flib"><fl:MetaData><fl:blob type="zip" zipped="true">!zip!</fl:blob></fl:MetaData><fl:ByteCodeJar><fl:blob type="jar" zipped="true">!jar!</fl:blob></fl:ByteCodeJar></fl:FunctionLibrary></p1:content><p1:inner /></p1:xiObj>